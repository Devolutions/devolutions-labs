{
  "variables": {
    "client_id": "{{env `AZURE_CLIENT_ID`}}",
    "client_secret": "{{env `AZURE_CLIENT_SECRET`}}",
    "lab_sources": "C:\\labSources",
    "tenant_id": "{{env `AZURE_TENANT_ID`}}",
    "subscription_id": "{{env `AZURE_SUBSCRIPTION_ID`}}",
    "windows_iso_url": "{{ env `WINDOWS_ISO_URL`}}"
  },
  "builders": [
    {
      "type": "azure-arm",

      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "tenant_id": "{{user `tenant_id`}}",
      "subscription_id": "{{user `subscription_id`}}",

      "managed_image_resource_group_name": "dvls-lab-services-test",
      "managed_image_name": "dvls-lab-service-base",
      "managed_image_storage_account_type": "Premium_LRS",

      "os_type": "Windows",
      "image_publisher": "MicrosoftWindowsServer",
      "image_offer": "WindowsServer",
      "image_sku": "2019-datacenter-gensecond",

      "communicator": "winrm",
      "winrm_use_ssl": true,
      "winrm_insecure": true,
      "winrm_timeout": "60m",
      "winrm_username": "packer",

      "azure_tags": {
        "deployment-type": "packer",
        "project": "dvls",
        "os_type": "windows"
      },

      "location": "canadaeast",
      "vm_size": "Standard_D4s_v3",

      "allowed_inbound_ip_addresses": "64.119.219.186/32,206.47.209.34/32"
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "elevated_user": "packer",
      "elevated_password": "{{.WinRMPassword}}",
      "inline": [
        "Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))",
        "choco install --no-progress --yes git",
        "Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart",
        "Add-WindowsFeature rsat-Hyper-V-tools",
        "Install-PackageProvider Nuget -Force",
        "Install-Module -Name PowerShellGet -Force",
        "winrm set winrm/config '@{MaxTimeoutms=\"1800000\"}'",
        "winrm set winrm/config/winrs '@{MaxMemoryPerShellMB=\"800\"}'"
      ]
    },{
      "type": "windows-restart",
      "restart_timeout": "30m",
      "timeout": "60m"
    },
    {
      "type": "powershell",
      "elevated_user": "packer",
      "elevated_password": "{{.WinRMPassword}}",
      "inline": [
        "git clone https://@github.com/Devolutions/devolutions-labs.git {{user `lab_sources`}}; cd {{user `lab_sources`}}; git checkout packer2",
        "Remove-Item {{user `lab_sources`}}\\.git -Recurse -Force",
        "{{user `lab_sources`}}\\powershell\\host_init.ps1 -IncludeOptional",
        "curl.exe -sqL '{{user `windows_iso_url`}}' -o C:\\Hyper-V\\ISOs\\windows_server_2019.iso"
      ]
    },
    {
      "type": "windows-restart",
      "restart_timeout": "30m",
      "timeout": "60m"
    },
    {
      "type": "powershell",
      "elevated_user": "packer",
      "elevated_password": "{{.WinRMPassword}}",
      "timeout": "180m",
      "debug_mode": true,
      "inline": [
        "Add-LocalGroupMember -Group \"Hyper-V Administrators\" -Member \"packer\"",
        "cd {{user `lab_sources`}}\\powershell\\; .\\golden.ps1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_timeout": "30m",
      "timeout": "60m"
    },
    {
      "type": "powershell",
      "elevated_user": "packer",
      "elevated_password": "{{.WinRMPassword}}",
      "inline": [  
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit /mode:vm",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}
